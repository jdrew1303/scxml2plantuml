@startuml

skinparam state {
  FontStyle bold
}


[*] -> on
state wrapper {
    [*] -> on
    wrapper --> wrapper : CALC.DO / short_expr = ''+ res \n long_expr = '' \n res = 0 \n 

    wrapper --> wrapper : CALC.SUB / send: DISPLAY.UPDATE \n res = eval(long_expr) \n short_expr = '' \n 

    wrapper --> wrapper : DISPLAY.UPDATE 

    wrapper --> wrapper : OP.INSERT 

state on {
    [*] -> ready
    on --> on : C 

state ready {
    [*] -> begin
    ready --> opEntered : OPER 

    ready --> zero1 : DIGIT.0 / short_expr = '' \n 

    ready --> int1 : DIGIT / short_expr = '' \n 

    ready --> frac1 : POINT / short_expr = '' \n 

state begin {
    begin --> negated1 : OPER.MINUS 

}

state result {
}

}

state negated1 {
    negated1 --> zero1 : DIGIT.0 

    negated1 --> int1 : DIGIT 

    negated1 --> frac1 : POINT 

}

state operand1 {
    operand1 --> opEntered : OPER 

state zero1 {
    zero1 --> int1 : DIGIT & \n[_event.name != 'DIGIT.0'] 

    zero1 --> frac1 : POINT 

}

state int1 {
    int1 --> frac1 : POINT 

    int1 --> int1 : DIGIT / send: DISPLAY.UPDATE \n short_expr = short_expr+_event.name.substr(_event.name.lastIndexOf('.')+1) \n 

}

state frac1 {
    frac1 --> frac1 : DIGIT / send: DISPLAY.UPDATE \n short_expr = short_expr+_event.name.substr(_event.name.lastIndexOf('.')+1) \n 

}

}

state opEntered {
    opEntered --> negated2 : OPER.MINUS 

    opEntered --> frac2 : POINT 

    opEntered --> zero2 : DIGIT.0 

    opEntered --> int2 : DIGIT 

}

state negated2 {
    negated2 --> zero2 : DIGIT.0 

    negated2 --> int2 : DIGIT 

    negated2 --> frac2 : POINT 

}

state operand2 {
    operand2 --> opEntered : OPER 

    operand2 --> result : EQUALS 

state zero2 {
    zero2 --> int2 : DIGIT & \n[_event.name != 'DIGIT.0'] 

    zero2 --> frac2 : POINT 

}

state int2 {
    int2 --> int2 : DIGIT / send: DISPLAY.UPDATE \n short_expr = short_expr+_event.name.substr(_event.name.lastIndexOf('.')+1) \n 

    int2 --> frac2 : POINT 

}

state frac2 {
    frac2 --> frac2 : DIGIT / send: DISPLAY.UPDATE \n short_expr = short_expr +_event.name.substr(_event.name.lastIndexOf('.')+1) \n 

}

}

}

}

@enduml

